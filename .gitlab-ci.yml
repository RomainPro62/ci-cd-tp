image: node:latest

cache:
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/
    - .npm/

stages:
  - validate
  - test
  - build
  - release
  - deploy

# === Anchors (blocs r√©utilisables) ===

.default-validate: &default-validate
  stage: validate
  rules:
    - if: '$CI_COMMIT_TAG == null && $CI_COMMIT_TITLE !~ /^chore: release/'
  script:
    - npm ci --cache .npm --prefer-offline

.default-test-rule: &default-test-rule
  rules:
    - if: '$CI_COMMIT_TAG == null && $CI_COMMIT_TITLE !~ /^chore: release/'

.default-release-rules: &default-release-rules
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG == null && $CI_COMMIT_TITLE !~ /^chore: release/'

# === Jobs ===

install:
  <<: *default-validate

lint:
  <<: *default-validate
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run lint

only-canary:
  stage: validate
  rules:
    - if: '$ENV_TARGET == "canary"'
  script:
    - echo "Hello Only Canary !"

unit-test:
  stage: test
  <<: *default-test-rule
  script:
    - npm test

integration-test:
  stage: test
  <<: *default-test-rule
  needs:
    - job: unit-test
      optional: true
  script:
    - echo "Hello Integration !"

e2e-test:
  stage: test
  needs:
    - job: integration-test
      optional: true
  rules:
    - if: '$CI_MERGE_REQUEST_ID'
  script:
    - echo "Hello E2E !"

release:
  stage: release
  when: manual
  <<: *default-release-rules
  before_script:
    - git config user.email "$GITLAB_USER_EMAIL"
    - git config user.name "$GITLAB_USER_NAME"
    - git remote set-url origin "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
    - git checkout "$CI_COMMIT_BRANCH"
    - git pull origin "$CI_COMMIT_BRANCH" --rebase
  script:
    - npx --yes release-it --ci