name: CI

on: [push, workflow_dispatch]

jobs:
  install:
    runs-on: ubuntu-latest
    container:
      image: node:latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: npm ci --cache .npm --prefer-offline

  lint:
    runs-on: ubuntu-latest
    container:
      image: node:latest
    needs: install
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: npm ci --cache .npm --prefer-offline
      - run: npm run lint

  unit-test:
    runs-on: ubuntu-latest
    container:
      image: node:latest
    needs: [install, lint]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: npm ci --cache .npm --prefer-offline
      - run: npm test

  release:
  if: ${{ github.event_name == 'workflow_dispatch' }}
  runs-on: ubuntu-latest
  container:
    image: node:latest
  needs: [unit-test]
  permissions:
    contents: write
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_RELEASE }}
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - run: git fetch --tags --prune --force

    - run: npm ci --cache .npm --prefer-offline

    - name: Config git (email/nom)
    - name: Marquer le repo comme s√ªr
    - name: Utiliser le token GitHub sur le remote
    - name: Release
      run: npx --yes release-it --ci --increment patch