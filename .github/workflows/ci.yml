name: CI

on: [push, workflow_dispatch]

jobs:
  install:
    runs-on: ubuntu-latest
    container:
      image: node:latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: npm ci --cache .npm --prefer-offline

  lint:
    runs-on: ubuntu-latest
    container:
      image: node:latest
    needs: install
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: npm ci --cache .npm --prefer-offline
      - run: npm run lint

  unit-test:
    runs-on: ubuntu-latest
    container:
      image: node:latest
    needs: [install, lint]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: npm ci --cache .npm --prefer-offline
      - run: npm test

  release:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    container:
      image: node:latest
    needs: [unit-test]
    permissions:
      contents: write
    env:
      # ✅ ta variable GitHub appelée "GITLAB_TOKEN"
      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_RELEASE }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: npm ci --cache .npm --prefer-offline

      - name: Config git (email/nom)
        run: |
          git config --global user.email "${GIT_USER_EMAIL}"
          git config --global user.name  "${GIT_USER_NAME:-$GITHUB_ACTOR}"
        env:
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
          GIT_USER_NAME:  ${{ secrets.GIT_USER_NAME }}

      - name: Marquer le repo comme sûr
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Utiliser le token GitHub sur le remote
        run: |
          git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git checkout "${GITHUB_REF_NAME}"
          git pull origin "${GITHUB_REF_NAME}" --rebase

      - name: Release (GitHub uniquement)
        run: npx --yes release-it --ci --no-gitlab --github.release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_RELEASE }}
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}  # tu peux le laisser, il ne sera pas utilisé
